// Next js
import type { Metadata } from "next";
// Google Fonts
import { Cairo, Roboto } from "next/font/google";
// Next Intl
import { NextIntlClientProvider } from 'next-intl';
import { getMessages } from 'next-intl/server';
import { notFound } from 'next/navigation';
import { routing } from '@/i18n/routing';
// Components
import Header from "@/components/Header";
import Footer from "@/components/Footer";
// Styles
import "../globals.css";

const roboto = Roboto({
    weight: '400',
    subsets: ['latin'],
})

const cairo = Cairo({
    weight: '400',
    subsets: ['arabic']
})

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

// Define the valid locales as a type
type ValidLocale = "en" | "ar" | "fr";

export default async function RootLayout({
    children,
    params,
}: Readonly<{
    children: React.ReactNode;
    params: Promise<{ locale: string }>;
}>) {

    // Ensure that the incoming `locale` is valid
    const { locale } = await params;
    if (!routing.locales.includes(locale as ValidLocale)) {
        notFound();
    }

    // Providing all messages to the client
    // side is the easiest way to get started
    const messages = await getMessages();

    return (
        <html
            lang={locale}
        >
            <body
                dir={locale == "ar" ? "rtl" : "ltr"}
                className={`${roboto.className} ${cairo.className} antialiased`}
            >
                <NextIntlClientProvider messages={messages}>
                    <>
                        <Header />
                        {children}
                        <Footer />
                    </>
                </NextIntlClientProvider>
            </body>
        </html>
    );
}
